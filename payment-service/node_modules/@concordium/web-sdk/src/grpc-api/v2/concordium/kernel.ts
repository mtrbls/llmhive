// @generated by protobuf-ts 2.9.1 with parameter optimize_code_size
// @generated from protobuf file "v2/concordium/kernel.proto" (package "concordium.v2", syntax proto3)
// tslint:disable
//
// This file currently exists to prevent circular dependencies when extracting
// PLT functionality into its own package. The file name `kernel` is choosen
// in anticipation of more core definitions operating at the module/core
// intersection to follow.
//
import { MessageType } from "@protobuf-ts/runtime";
/**
 * An address of an account. Always 32 bytes.
 *
 * @generated from protobuf message concordium.v2.AccountAddress
 */
export interface AccountAddress {
    /**
     * @generated from protobuf field: bytes value = 1;
     */
    value: Uint8Array;
}
/**
 * A memo which can be included as part of a transfer. Max size is 256 bytes.
 *
 * @generated from protobuf message concordium.v2.Memo
 */
export interface Memo {
    /**
     * @generated from protobuf field: bytes value = 1;
     */
    value: Uint8Array;
}
// @generated message type with reflection information, may provide speed optimized methods
class AccountAddress$Type extends MessageType<AccountAddress> {
    constructor() {
        super("concordium.v2.AccountAddress", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.AccountAddress
 */
export const AccountAddress = new AccountAddress$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Memo$Type extends MessageType<Memo> {
    constructor() {
        super("concordium.v2.Memo", [
            { no: 1, name: "value", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message concordium.v2.Memo
 */
export const Memo = new Memo$Type();
